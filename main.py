# Создаем класс-приложение, который будет хранить обработчики
class SimpleApp:
    def __init__(self):
        # Словарь для хранения обработчиков. Ключ - путь, значение - функция.
        self.handlers = {}

    # Наш декоратор. Он будет принимать путь (например, '/home')
    def get(self, path: str):
        # Декоратор должен вернуть другую функцию.
        def decorator(func):
            print(f"Регистрируем обработчик для пути: {path}")
            # Сохраняем функцию-обработчик в нашем словаре
            self.handlers[path] = func
            # Возвращаем исходную функцию, чтобы её можно было вызывать напрямую
            return func

        return decorator


# Создаем экземпляр нашего приложения
app = SimpleApp()


# Используем наш декоратор!
@app.get("/hello")
def say_hello():
    return "Привет, мир!"


@app.get("/info")
def get_info():
    return "Это информация о приложении."


# Теперь мы можем проверить, что наши функции зарегистрированы
print("\nСписок зарегистрированных обработчиков:")
for path, handler in app.handlers.items():
    print(f"Путь: {path}, Имя функции: {handler.__name__}, Результат вызова: {handler()}")
